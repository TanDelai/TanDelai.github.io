<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>TanDelai</title>
  
  
  <link href="http://example.com/atom.xml" rel="self"/>
  
  <link href="http://example.com/"/>
  <updated>2021-08-11T18:12:13.710Z</updated>
  <id>http://example.com/</id>
  
  <author>
    <name>TanDelai</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="http://example.com/2021/08/12/SoftwareTest/"/>
    <id>http://example.com/2021/08/12/SoftwareTest/</id>
    <published>2021-08-11T18:08:54.064Z</published>
    <updated>2021-08-11T18:12:13.710Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">layout: pages</span><br><span class="line">title: 软件测试 | 第一篇 基础概念 </span><br><span class="line">date: 2021-08-12 02:11:14</span><br><span class="line">tags:</span><br><span class="line">- SoftwareTest</span><br><span class="line">categories:</span><br><span class="line">- 软件编程</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span c</summary>
      
    
    
    
    
  </entry>
  
  <entry>
    <title>Jmeter</title>
    <link href="http://example.com/2020/11/27/SoftWareTest-Jmeter/"/>
    <id>http://example.com/2020/11/27/SoftWareTest-Jmeter/</id>
    <published>2020-11-26T20:55:14.000Z</published>
    <updated>2021-08-11T18:17:30.706Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Jmeter环境搭建"><a href="#Jmeter环境搭建" class="headerlink" title="Jmeter环境搭建"></a>Jmeter环境搭建</h2><h2 id="Jmeter元件介绍"><a href="#Jmeter元件介绍" class="headerlink" title="Jmeter元件介绍"></a>Jmeter元件介绍</h2><h2 id="Jmeter实战经验"><a href="#Jmeter实战经验" class="headerlink" title="Jmeter实战经验"></a>Jmeter实战经验</h2>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;Jmeter环境搭建&quot;&gt;&lt;a href=&quot;#Jmeter环境搭建&quot; class=&quot;headerlink&quot; title=&quot;Jmeter环境搭建&quot;&gt;&lt;/a&gt;Jmeter环境搭建&lt;/h2&gt;&lt;h2 id=&quot;Jmeter元件介绍&quot;&gt;&lt;a href=&quot;#Jmeter元件介绍&quot;</summary>
      
    
    
    
    <category term="软件编程" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="SoftwareTest,Jmeter" scheme="http://example.com/tags/SoftwareTest-Jmeter/"/>
    
  </entry>
  
  <entry>
    <title>Java笔记 | 第一篇 语言概述</title>
    <link href="http://example.com/2020/11/27/JavaNote-FirstPart/"/>
    <id>http://example.com/2020/11/27/JavaNote-FirstPart/</id>
    <published>2020-11-26T20:55:14.000Z</published>
    <updated>2021-08-07T15:53:07.548Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、语言概述"><a href="#一、语言概述" class="headerlink" title="一、语言概述"></a>一、语言概述</h1><h2 id="（一）计算机语言概述"><a href="#（一）计算机语言概述" class="headerlink" title="（一）计算机语言概述"></a>（一）计算机语言概述</h2><h3 id="1、计算机组成"><a href="#1、计算机组成" class="headerlink" title="1、计算机组成"></a>1、计算机组成</h3><ul><li><p>硬件：</p><p>CPU：中央处理器，负责运算。</p><p>内存：临时数据存储空间，断电数据消失。</p><p>硬盘：永久化存储设备。</p><p>主板：载体。</p><p>网卡：LAN 、WAN，负责通信。</p><p>电源：提供电能。</p><p>外接设备：鼠标、键盘、扫描仪、打印机等。</p></li><li><p>软件：</p><p>系统软件：Windows、Mac OS、Linux等。</p><p>应用软件：不同应用程序及客户端。</p></li><li><p>计算机语言：人与计算机之间传递信息的媒介。程序员通过编程语言编写程序（软件），驱动硬件进行数据操作以实现某些功能。</p></li></ul><h3 id="2、计算机语言"><a href="#2、计算机语言" class="headerlink" title="2、计算机语言"></a>2、计算机语言</h3><ul><li>是一个团队或者组织制定的一套固定的语法规则，通过学习这套语法规则，使用该套语法规则和计算机进行交互。</li></ul><h3 id="3、第一代语言——机器语言"><a href="#3、第一代语言——机器语言" class="headerlink" title="3、第一代语言——机器语言"></a>3、第一代语言——机器语言</h3><ul><li>程序员直接编写二进制码。计算机由电流驱动，电流只能表示正、负两种状态。二进制码和自然世界中的十进制存在转换关系。所以很巧妙的是:计算机可以模拟现实世界中的事物。</li><li>最具代表性的是：打孔机。</li></ul><h3 id="4、第二代语言——低级语言"><a href="#4、第二代语言——低级语言" class="headerlink" title="4、第二代语言——低级语言"></a>4、第二代语言——低级语言</h3><ul><li>最具代表性的语言：汇编语言。比机器语言更接近人类自然语言。</li></ul><h3 id="5、第三代语言——高级语言"><a href="#5、第三代语言——高级语言" class="headerlink" title="5、第三代语言——高级语言"></a>5、第三代语言——高级语言</h3><ul><li>C：面向过程。</li><li>C++：一半面向对象，一半面向过程。</li><li>Python：面向对象。</li><li>Java：完全面向对象。Java语言的底层是C++、可使用C++语言写一个虚拟电脑，即JVM。</li></ul><h2 id="（二）Java语言概述"><a href="#（二）Java语言概述" class="headerlink" title="（二）Java语言概述"></a>（二）Java语言概述</h2><h3 id="1、Java特性"><a href="#1、Java特性" class="headerlink" title="1、Java特性"></a>1、Java特性</h3><ul><li>面向对象：人类通常是以对象的方式认知世界的，面向对象更容易让人理解，采用面向对象的方式可以让复杂问题简单化。</li><li>可移植性：JVM跨平台，一处开发，到处执行。<strong>JVM屏蔽了操作系统之间的差异</strong>。</li><li>健壮性：”自动垃圾回收机制“中JVM负责调度GC（Garbage Collection）机制，无需程序员干涉，但是程序员也可以手动调度GC机制。</li><li>简单性：<strong>Java语言屏蔽了指针概念</strong>。</li><li>安全的：Java适合于网络/分布式环境，并且封装的概念将程序实现的细节都隐藏了起来，只对外暴露公共的访问方式。</li><li>多线程的：Java完美支持多线程并发，完美支持当下电商集中促销的商业模式。</li><li>分布式的：Java是为Internet的分布式环境设计的，因为它能够处理TCP/IP协议。事实上，通过URL访问一个网络资源和访问本地文件是一样简单的，其支持远程方法调用(RMI,Remote Method Invocation)。</li></ul><h3 id="2、Java其他"><a href="#2、Java其他" class="headerlink" title="2、Java其他"></a>2、Java其他</h3><ul><li>项目部署的时候只需要给客户安装JRE即可，体积小，便捷快速。</li><li>Java编译：Java源代码不会影响字节码文件的运行，一个java源文件是可以生成多个class文件的。编译实质上是检查语法。</li><li>编译和执行可以在两套不同的操作系统上完成。</li><li>字节码文件可以反编译成为源代码，称之为反射机制。</li><li>classloader类加载器，加载（装载）A.class文件，其中A为类名。本质上是类加载器去硬盘上寻找类对应的字节码文件。</li><li>JVM启动解释器将字节码文件解释为二进制码，供OS和计算机硬件交互。</li><li>java新特性：java 后直接跟java源文件的路径，直接运行。但实际上底层的实现原理还是和以前一样，以上命令实现的过程中，还是会在内存中编译形成一个字节码文件。</li></ul><h2 id="（三）Java语言特性"><a href="#（三）Java语言特性" class="headerlink" title="（三）Java语言特性"></a>（三）Java语言特性</h2><h3 id="1、Java发展史"><a href="#1、Java发展史" class="headerlink" title="1、Java发展史"></a>1、Java发展史</h3><ul><li>1995年，Sun公司，James Gosling（java之父）。</li><li>2009年，Oracle收购。</li><li>Java语言的特性：面向对象的、分布式的、解释性的、多线程的、可移植的、健壮性、安全的、体系结构中立的、高性能的、动态的。</li><li>JavaSE（Java2 Platform,Standard Edition）Java平台标准版（基础语法+基础库）。</li><li>JavaEE（Java2 Platform,Enterprise Edition）Java平台企业版（OA、保险、金融）。</li><li>JavaME（Java2 Platform,Micro Edition）Java平台微型版（微型设备嵌入式开发）。</li></ul><h3 id="2、跨平台原理"><a href="#2、跨平台原理" class="headerlink" title="2、跨平台原理"></a>2、跨平台原理</h3><ul><li>Java程序并非是直接运行的。Java编译器将Java源程序编译成与平台无关的字节码文件（.class文件）。然后由Java虚拟机（JVM）对字节码文件解释执行。所以在不同的操作系统下，只需要安装与该系统对应的Java虚拟机即可实现Java程序的跨平台运行。</li><li>Java语言当中真正操作内存的是JVM（Java虚拟机），所有的java程序都是运行在Java虚拟机当中的，而Java虚拟机执行过程中再去操作内存。</li></ul><h3 id="3、Java程序的开发流程"><a href="#3、Java程序的开发流程" class="headerlink" title="3、Java程序的开发流程"></a>3、Java程序的开发流程</h3><img src="/2020/11/27/JavaNote-FirstPart/GiteeBlog\blog\source\_posts\photoes\Java软件开发和执行流程.jpg" alt=" " style="zoom:23%;"><h3 id="4、JDK、JRE、JVM逻辑包含关系"><a href="#4、JDK、JRE、JVM逻辑包含关系" class="headerlink" title="4、JDK、JRE、JVM逻辑包含关系"></a>4、JDK、JRE、JVM逻辑包含关系</h3><ul><li><p>JDK（Java Development Kit）：称之为Java开发工具箱，包含了JRE和开发工具。</p></li><li><p>JRE（Java Runtime Environment）：称之为Java运行环境，包含了JVM和核心类库（ API）。</p></li><li><p>JVM（Java Virtual Machine）：称之为Java虚拟机。</p></li><li><p>JSR规范：Java Specification Request。</p></li><li><p>JCP组织：Java Community Process。</p></li><li><p>RI：Reference Implementation。</p></li><li><p>TCK：Technology Compatibility Kit。</p><img src="/2020/11/27/JavaNote-FirstPart/GiteeBlog\blog\source\_posts\photoes\JDK-JRE-JVM.jpg" alt="JDK-JRE-JVM" style="zoom: 50%;"></li></ul><h2 id="（四）Java开发环境搭建"><a href="#（四）Java开发环境搭建" class="headerlink" title="（四）Java开发环境搭建"></a>（四）Java开发环境搭建</h2><h3 id="1、JDK安装"><a href="#1、JDK安装" class="headerlink" title="1、JDK安装"></a>1、JDK安装</h3><ul><li><p>包含JRE、JVM的安装</p><table><thead><tr><th>目录名称</th><th>说明</th></tr></thead><tbody><tr><td>bin</td><td>该路径下存放了JDK的各种工具命令。javac和java就放在这个目录。</td></tr><tr><td>conf</td><td>该路径下存放了JDK的相关配置文件。</td></tr><tr><td>include</td><td>该路径下存放了一些平台特定的头文件。</td></tr><tr><td>jmods</td><td>该路径下存放了JDK的各种模块。</td></tr><tr><td>legal</td><td>该路径下存放了JDK各模块的授权文档。</td></tr><tr><td>lib</td><td>该路径下存放了JDK工具的一些补充JAR包。</td></tr></tbody></table></li></ul><h3 id="2、path环境变量配置"><a href="#2、path环境变量配置" class="headerlink" title="2、path环境变量配置"></a>2、path环境变量配置</h3><ul><li>引导Windows OS寻址命令文件。</li><li>Path本质上是隶属于Windows  OS的一种操作机制。</li></ul><h3 id="3、class-path环境变量配置"><a href="#3、class-path环境变量配置" class="headerlink" title="3、class path环境变量配置"></a>3、class path环境变量配置</h3><ul><li>引导classloader寻址字节码文件，但是因其改变了默认的寻址位置，固定于某一处，故暂时不需配置。</li><li>class path是Java特有的环境变量，需要在Windows中新建。</li></ul><h3 id="4、public-class与class的区别"><a href="#4、public-class与class的区别" class="headerlink" title="4、public class与class的区别"></a>4、public class与class的区别</h3><ul><li>一个java源文件中可定义多个class。</li><li>一个class会定义生成一个xxx.class字节码文件。</li><li>一个java源文件中public的class不是必须的。</li><li>一个java源文件中如果定义公开的类（public class），只能有一个，并且需要该类名称和java源文件名称一致。</li><li>每一个class中都需要写主方。</li><li>想从哪个入口进去，就加载哪一个类就行，但在开发中，一般只有一个入口。</li></ul><h3 id="5、JAVA-HOME"><a href="#5、JAVA-HOME" class="headerlink" title="5、JAVA_HOME"></a>5、JAVA_HOME</h3><ul><li>JAVA-WEB中的Tomcat服务器需要配置。</li></ul><h3 id="6、JAVA-HOME的bin目录"><a href="#6、JAVA-HOME的bin目录" class="headerlink" title="6、JAVA_HOME的bin目录"></a>6、JAVA_HOME的<code>bin</code>目录</h3><ul><li>java：这个可执行程序其实就是JVM，运行Java程序，就是启动JVM，然后让JVM执行指定的编译后的代码。</li><li>javac：这是Java的编译器，它用于把Java源码文件（以<code>.java</code>后缀结尾）编译为Java字节码文件（以<code>.class</code>后缀结尾）。</li><li>jar：用于把一组<code>.class</code>文件打包成一个<code>.jar</code>文件，便于发布。</li><li>javadoc：用于从Java源码中自动提取注释并生成文档。</li><li>jdb：Java调试器，用于开发阶段的运行调试。</li></ul><h2 id="（五）HelloWorld程序演示"><a href="#（五）HelloWorld程序演示" class="headerlink" title="（五）HelloWorld程序演示"></a>（五）HelloWorld程序演示</h2><h3 id="1、基础DOS命令"><a href="#1、基础DOS命令" class="headerlink" title="1、基础DOS命令"></a>1、基础DOS命令</h3><ul><li><p>Windows系统中复制：光标选中，右键单击即复制到剪切板，可直接粘贴。</p></li><li><p>在文件夹中‘.’表示当前目录。在文件中‘..’表示返回上一级文件目录。</p><table><thead><tr><th>DOS命令</th><th>作用</th></tr></thead><tbody><tr><td>Win + R</td><td>进入运行窗口</td></tr><tr><td>cmd</td><td>进入命令窗口(Command Prompt)</td></tr><tr><td>mkdir</td><td>创建一个目录（make directory）</td></tr><tr><td>dir</td><td>查看当前目录下的内容</td></tr><tr><td>d:   c: 等</td><td>盘符切换</td></tr><tr><td>cd 目录</td><td>改变一个目录（change directory）</td></tr><tr><td>cd..</td><td>返回上一级目录</td></tr><tr><td>cd 目录1\目录2</td><td>进入多级目录</td></tr><tr><td>cd\</td><td>退回到盘符更目录</td></tr><tr><td>cls</td><td>清屏(clear screen)</td></tr><tr><td>exit</td><td>退出命令窗口(exit)</td></tr><tr><td>del</td><td>删除命令(delete)</td></tr><tr><td>Tab</td><td>自动补全</td></tr><tr><td>ipconfig</td><td>查看本机IP地址</td></tr><tr><td>ping</td><td>通信正常测试</td></tr><tr><td>java -version</td><td>java程序的版本</td></tr></tbody></table></li></ul><h3 id="2、HelloWorld程序在DOS系统中的编译和执行"><a href="#2、HelloWorld程序在DOS系统中的编译和执行" class="headerlink" title="2、HelloWorld程序在DOS系统中的编译和执行"></a>2、HelloWorld程序在DOS系统中的编译和执行</h3><ul><li><pre><code class="java">public class HelloWorld &#123;    public static void main(String[] args) &#123;        System.out.println(&quot;HelloWorld&quot;);    &#125;&#125;</code></pre></li><li><table><thead><tr><th>执行结果</th><th>DOS命令</th></tr></thead><tbody><tr><td>编译命令</td><td>Javac HelloWorld.java</td></tr><tr><td>运行命令</td><td>Java HelloWorld</td></tr></tbody></table></li></ul><h3 id="3、绝对路径和相对路径"><a href="#3、绝对路径和相对路径" class="headerlink" title="3、绝对路径和相对路径"></a>3、绝对路径和相对路径</h3><ul><li>绝对路径：在Windows操作系统中凡是路径起点是盘符的都是绝对路径。</li><li>相对路径：相对于当前位置而言，从当前作为位置的起点的路径，需有参照系 。</li></ul><h3 id="4、DOS命令窗口支持模糊搜索“-class”"><a href="#4、DOS命令窗口支持模糊搜索“-class”" class="headerlink" title="4、DOS命令窗口支持模糊搜索“*.class”"></a>4、DOS命令窗口支持模糊搜索“*.class”</h3><ul><li>文件名：T1.class、T1.glass。del  *ass这个命令可以直接删除上述两个文件。</li></ul><h3 id="5、DOS命令窗口查看本机的IP地址“ipconfig”"><a href="#5、DOS命令窗口查看本机的IP地址“ipconfig”" class="headerlink" title="5、DOS命令窗口查看本机的IP地址“ipconfig”"></a>5、DOS命令窗口查看本机的IP地址“ipconfig”</h3><ul><li>IP地址：计算机在同一个网络中的唯一识别码。</li><li>ipconfig(ipconfig/all能查看更全的本地信息，比如MAC地址)。</li><li>防蹭网：绑定MAC地址与路由器。</li></ul><h3 id="6、DOS命令窗口测试正常通信"><a href="#6、DOS命令窗口测试正常通信" class="headerlink" title="6、DOS命令窗口测试正常通信"></a>6、DOS命令窗口测试正常通信</h3><ul><li><p>ping命令：</p><p>ping 域名/IP地址</p><p>ping  <a href="http://www.baidu.com/">www.baidu.com</a></p><p>ping 61.135.169.121 -t（加‘-t’表示一直ping，Ctrl+C结束命令）</p></li><li><p>域名和/IP地址都可以打开网址，但最终域名底层还是会被解析成IP地址的形式（DNS和域名解析）。</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;一、语言概述&quot;&gt;&lt;a href=&quot;#一、语言概述&quot; class=&quot;headerlink&quot; title=&quot;一、语言概述&quot;&gt;&lt;/a&gt;一、语言概述&lt;/h1&gt;&lt;h2 id=&quot;（一）计算机语言概述&quot;&gt;&lt;a href=&quot;#（一）计算机语言概述&quot; class=&quot;headerli</summary>
      
    
    
    
    <category term="软件编程" scheme="http://example.com/categories/%E8%BD%AF%E4%BB%B6%E7%BC%96%E7%A8%8B/"/>
    
    
    <category term="Java" scheme="http://example.com/tags/Java/"/>
    
  </entry>
  
</feed>
